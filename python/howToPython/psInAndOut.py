# ######################## 입력할 떄 ########################

# # 파이썬에서 데이터를 입력받을 떄는 input()을 이용합니다. input()의 경우 한 줄의 문자열을 입력받도록 한다.
# # 만약 파이썬에서 입력받은 데이터를 정수형 데이터로 처리하기 위해서는 문자열을 정수로 바꾸는 int() 함수를 사용한다.

# #### 여러 개의 데이터를 입력 받을 떄, 데이터가 공백으로 구분되는 경우, 이를 입력받는 코드 ####

# list(map(int,input().split()))
# #가장 먼저 input()으로 입력받은 문자열을 split()을 이용해 공백으로 나눈 리스트로 바꾼 뒤,
# #map을 이용하여 해당 리스트의 모든 원소에 int() 함수를 적용.
# #최종적으로 그 결과를 list()로 다시 바꿈으로써 입력받은 문자열을 띄어쓰기로 구분하여 각각 숫자 자료형으로 저장하게 합니다.

# #### 입력을 위한 전형적인 소스코드 ####
# # 데이터의 개수 입력
# n = int(input())
# # 각 데이터를 공백으로 구분하여 입력
# data = list(map(int, input().split()))

# data.sort(reverse=True)
# print(data)

# #### 공백을 기준으로 구분하여 적은 수의 데이터 입력 ####
# # n,m,k를 공백으로 구분하여 입력
# n,m,k = map(int,input().split())
# print(n,m,k)

# #### 입력의 개수가 엄청나게 많은 경우에는 단순히 input() 함수를 그대로 사용하지 않음. 시간초과를 피하기 위함.
# # 이런 경우, 파이썬의 sys라이브러리에 정의되어 있는 sys.stdin.readline() 함수를 이용합니다.
# # sys 라이브러리를 사용할 떄는 한 줄 입력을 받고 나서 rstrip() 함수를 반드시 호출해야함.
# # readline()으로 입력하면, 입력후 엔터가 줄 바꿈 기호로 입력되는데, 이 공백 문자를 제거하려면 rstrip() 함수를 사용해야함. 관행적으로 외워버리세요.

# import sys
# # 문자열 입력받기
# data= sys.stdin.readline().rstrip()
# print(data)


# ######################## 출력할 떄 ########################
# #출력할 변수들
# a = 1
# b = 2
# print(a, b) #print는 기본적으로 출력 이후에 줄 바꿈을 수행합니다. 따라서 print()를 사용할 떄마다 줄이 변경됩니다.

# #### 문자열과 수를 함께 출력해야 하는 경우 - 단순히 더하기 연산자(+)을 이용하여 문자열과 수를 더하면 오류가 발생한다.
# # 이 떄에는, str()함수를 이용하여 출력하고자 하는 변수 데이터를 문자열로 변경해주거나 ,각 자료형을 ,(콤마)를 기준으로 구분하여 출력하면 된다.

# #str() 함수 이용하여 출력하는 방법
# answer = 7
# print("정답은 "+str(answer) + "입니다.")

#,(콤마)를 이용하여 출력하는 방법
answer = 7
print("정답은", answer, "입니다.") #이 떄 콤마 쓰면 변수의 값 사이에 의도치 않은 공백이 삽입됨을 신경쓸것.